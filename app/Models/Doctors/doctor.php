<?php

namespace App\Models\Doctors;


use App\Models\Doctors\DoctorTranslation;
use App\Models\Hospital\Hospital;
use App\Models\SocialMedia\SocialMedia;
//use App\Models\WorkPlace\WorkPlace;
use App\Models\Clinic\Clinic;
use App\Models\Specialty\Specialty;
use App\Models\Customer\Customer;
use App\Models\DoctorRate\DoctorRate;
use App\Models\medicalDevice\medicalDevice;
use App\Models\Appointment\Appointment;
use App\Scopes\DoctorScope;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Config;
use Illuminate\Pagination\Paginator;


class Doctor extends Model
{
    use HasFactory;

    protected $table='doctors';
    protected $fillable =['Id','image','appointments_id','specialty_id','hospital_id','clinic_id','social_media_id','is_active','is_approved'];
    protected $hidden   =['social_media_id','specialty_id','hospital_id','work_places_id','created_at','updated_at','clinic_id','appointments_id','pivot'];

   protected static function boot()
   {
       parent::boot(); // TODO: Change the autogenerated stub
       static::addGlobalScope(new DoctorScope());
   }

    public function scopeNotActive($query)
    {
        return $query->where('is_active',0)->get();
    }

    public function doctorTranslation()
    {
        return $this->hasMany(DoctorTranslation::class,'doctor_id');
    }

    public function socialMedia()
    {
        return $this->hasMany(SocialMedia::class);
    }
//    public  function workPlace()
//    {
//        return $this->belongsToMany(workPlace::class);
//    }

    public  function Specialty()
    {
        return $this->belongsToMany(Specialty::class);
    }

    public  function medicalDevice()
    {
        return $this->belongsToMany(MedicalDevice::class);
    }

    public function DoctorRate()
    {
        return $this->hasOne(DoctorRate::class);
    }

    public  function clinic()
    {
        return $this->hasOne(clinic::class);
    }
    public function hospital()
    {
        return $this->belongsToMany(Hospital::class);
    }

    public function customer()
    {
        return $this -> belongsToMany('App\Models\Customer\Customer','Customer_Doctor','doctor_id','customer_id','id','id');
    }

    public function appointment()
    {
        return $this->hasMany(Appointment::class);
    }


}
